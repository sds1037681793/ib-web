<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" scanPeriod="120 seconds" debug="true">
	<springProperty scope="context" name="logLevel" source="log.level" defaultValue="INFO"/>
	<springProperty scope="context" name="logPath" source="log.path" defaultValue="/tmp/logs"/>

	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
			<!-- <pattern>%-5level %logger{36} - %msg%n</pattern> -->
		</encoder>
	</appender>
	<appender name="rollingFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logPath}/ib-web.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logPath}/ib-web.%i.log</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>5</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>
	<if condition='property("spring.profiles.active").contains("prod")'>
        <then>
        	<root level="${logLevel}">
				<appender-ref ref="rollingFile" />
			</root>
        </then>
        <else>
            <root level="${logLevel}">
				<appender-ref ref="console" />
			</root>
        </else>
    </if>
    
    <!-- show parameters for hibernate sql 专为 Hibernate 定制 --> 
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />  
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="TRACE" />  
    <logger name="org.hibernate.SQL" level="TRACE" />  
    <logger name="org.hibernate.engine.QueryParameters" level="TRACE" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="TRACE" />  

    <!--log4jdbc -->
    <logger name="jdbc.sqltiming" level="TRACE"/>

	<logger name="org.springframework.amqp.rabbit.listener.BlockingQueueConsumer" level="ERROR" additivity="true"></logger>
</configuration>